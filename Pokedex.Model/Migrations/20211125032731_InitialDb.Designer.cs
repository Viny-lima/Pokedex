// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pokedex.Model;

namespace Pokedex.Model.Migrations
{
    [DbContext(typeof(PokemonDbContext))]
    [Migration("20211125032731_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("Pokedex.Model.PokeApi.Ability", b =>
                {
                    b.Property<int>("Id_Ability")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsHidden");

                    b.Property<int?>("PokemonId");

                    b.Property<int?>("PropertiesAbilityId_PropertiesAbility");

                    b.Property<long>("Slot");

                    b.HasKey("Id_Ability");

                    b.HasIndex("PokemonId");

                    b.HasIndex("PropertiesAbilityId_PropertiesAbility");

                    b.ToTable("Ability");
                });

            modelBuilder.Entity("Pokedex.Model.PokeApi.DreamWorld", b =>
                {
                    b.Property<int>("Id_DreamWorld")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FrontDefault");

                    b.HasKey("Id_DreamWorld");

                    b.ToTable("DreamWorld");
                });

            modelBuilder.Entity("Pokedex.Model.PokeApi.Moves", b =>
                {
                    b.Property<int>("Id_Moves")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MoveId_PropertiesMove");

                    b.Property<int?>("PokemonId");

                    b.HasKey("Id_Moves");

                    b.HasIndex("MoveId_PropertiesMove");

                    b.HasIndex("PokemonId");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("Pokedex.Model.PokeApi.OfficialArtwork", b =>
                {
                    b.Property<int>("Id_OfficialArtwork")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FrontDefault");

                    b.HasKey("Id_OfficialArtwork");

                    b.ToTable("OfficialArtwork");
                });

            modelBuilder.Entity("Pokedex.Model.PokeApi.Other", b =>
                {
                    b.Property<int>("Id_Other")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DreamWorldId_DreamWorld");

                    b.Property<int?>("OfficialArtworkId_OfficialArtwork");

                    b.HasKey("Id_Other");

                    b.HasIndex("DreamWorldId_DreamWorld");

                    b.HasIndex("OfficialArtworkId_OfficialArtwork");

                    b.ToTable("Other");
                });

            modelBuilder.Entity("Pokedex.Model.PokeApi.PropertiesAbility", b =>
                {
                    b.Property<int>("Id_PropertiesAbility")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Url");

                    b.HasKey("Id_PropertiesAbility");

                    b.ToTable("PropertiesAbility");
                });

            modelBuilder.Entity("Pokedex.Model.PokeApi.PropertiesMove", b =>
                {
                    b.Property<int>("Id_PropertiesMove")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Url");

                    b.HasKey("Id_PropertiesMove");

                    b.ToTable("PropertiesMove");
                });

            modelBuilder.Entity("Pokedex.Model.PokeApi.Sprites", b =>
                {
                    b.Property<int>("Id_Sprites")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FrontDefault");

                    b.Property<string>("FrontShiny");

                    b.Property<int?>("OtherId_Other");

                    b.HasKey("Id_Sprites");

                    b.HasIndex("OtherId_Other");

                    b.ToTable("Sprites");
                });

            modelBuilder.Entity("Pokedex.Model.PokeApi.Stats", b =>
                {
                    b.Property<int>("Id_Stats")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("EffortState");

                    b.Property<int?>("PokemonId");

                    b.Property<int?>("PropertiesStateId_PropertiesAbility");

                    b.Property<long>("ValueState");

                    b.HasKey("Id_Stats");

                    b.HasIndex("PokemonId");

                    b.HasIndex("PropertiesStateId_PropertiesAbility");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("Pokedex.Model.PokeApi.TypeElement", b =>
                {
                    b.Property<int>("Id_TypeElement")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("PokemonId");

                    b.Property<long>("Slot");

                    b.Property<int?>("TypeId_PropertiesAbility");

                    b.HasKey("Id_TypeElement");

                    b.HasIndex("PokemonId");

                    b.HasIndex("TypeId_PropertiesAbility");

                    b.ToTable("TypeElement");
                });

            modelBuilder.Entity("Pokedex.Model.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BaseExperience");

                    b.Property<int>("Height");

                    b.Property<string>("Name");

                    b.Property<int?>("SpritesId_Sprites");

                    b.Property<int>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("SpritesId_Sprites");

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("Pokedex.Model.PokeApi.Ability", b =>
                {
                    b.HasOne("Pokedex.Model.Pokemon")
                        .WithMany("Abilities")
                        .HasForeignKey("PokemonId");

                    b.HasOne("Pokedex.Model.PokeApi.PropertiesAbility", "PropertiesAbility")
                        .WithMany()
                        .HasForeignKey("PropertiesAbilityId_PropertiesAbility");
                });

            modelBuilder.Entity("Pokedex.Model.PokeApi.Moves", b =>
                {
                    b.HasOne("Pokedex.Model.PokeApi.PropertiesMove", "Move")
                        .WithMany()
                        .HasForeignKey("MoveId_PropertiesMove");

                    b.HasOne("Pokedex.Model.Pokemon")
                        .WithMany("Moves")
                        .HasForeignKey("PokemonId");
                });

            modelBuilder.Entity("Pokedex.Model.PokeApi.Other", b =>
                {
                    b.HasOne("Pokedex.Model.PokeApi.DreamWorld", "DreamWorld")
                        .WithMany()
                        .HasForeignKey("DreamWorldId_DreamWorld");

                    b.HasOne("Pokedex.Model.PokeApi.OfficialArtwork", "OfficialArtwork")
                        .WithMany()
                        .HasForeignKey("OfficialArtworkId_OfficialArtwork");
                });

            modelBuilder.Entity("Pokedex.Model.PokeApi.Sprites", b =>
                {
                    b.HasOne("Pokedex.Model.PokeApi.Other", "Other")
                        .WithMany()
                        .HasForeignKey("OtherId_Other");
                });

            modelBuilder.Entity("Pokedex.Model.PokeApi.Stats", b =>
                {
                    b.HasOne("Pokedex.Model.Pokemon")
                        .WithMany("StatusBase")
                        .HasForeignKey("PokemonId");

                    b.HasOne("Pokedex.Model.PokeApi.PropertiesAbility", "PropertiesState")
                        .WithMany()
                        .HasForeignKey("PropertiesStateId_PropertiesAbility");
                });

            modelBuilder.Entity("Pokedex.Model.PokeApi.TypeElement", b =>
                {
                    b.HasOne("Pokedex.Model.Pokemon")
                        .WithMany("Types")
                        .HasForeignKey("PokemonId");

                    b.HasOne("Pokedex.Model.PokeApi.PropertiesAbility", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId_PropertiesAbility");
                });

            modelBuilder.Entity("Pokedex.Model.Pokemon", b =>
                {
                    b.HasOne("Pokedex.Model.PokeApi.Sprites", "Sprites")
                        .WithMany()
                        .HasForeignKey("SpritesId_Sprites");
                });
#pragma warning restore 612, 618
        }
    }
}
